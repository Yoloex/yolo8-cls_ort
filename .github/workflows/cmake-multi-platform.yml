name: CMake on multiple platforms with onnxruntime

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-on-ubuntu:
    runs-on: ubuntu-20.04
    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        build_type: [Release]
        os: [ubuntu-latest]
        c_compiler: [gcc]
        cpp_compiler: [g++]
        
    steps:
    - uses: actions/checkout@v3

    - name: Download onnxruntime
      run: |
        wget -O onnxruntime.tgz https://github.com/microsoft/onnxruntime/releases/download/v1.16.3/onnxruntime-linux-x64-1.16.3.tgz
        echo "Download finished"
        echo "Extracting ..."
        tar -xf onnxruntime.tgz
        mv onnxruntime-linux-x64-1.16.3 onnxruntime
        path=$(find ~+ -type d -name 'onnxruntime')
        echo "LIB_DIR=$path" >> $GITHUB_ENV

    - name: Configure CMake
      run: >
        cmake -B build
        -DONNXRUNTIME_ROOTDIR=${{ env.LIB_DIR }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -S ${{ github.workspace }}

    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build_type }}
        find build -type f

    - name: Test
      working-directory: build
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Upload to artifact
      uses: actions/upload-artifact@v3
      with:
        name: yolo8-cls_ort
        path: ${{ github.workspace }}/build

  build-on-windows:
    runs-on: windows-latest
    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        build_type: [Release]
        os: [windows-latest]
        c_compiler: [cl]
        cpp_compiler: [cl]
        
    steps:
    - uses: actions/checkout@v3
    - name: Download onnxruntime
      run: |
        choco install wget
        wget -O onnxruntime.zip https://github.com/microsoft/onnxruntime/releases/download/v1.16.3/onnxruntime-win-x64-1.16.3.zip
        unzip onnxruntime.zip
        Rename-Item -Path "onnxruntime-win-x64-1.16.3" -NewName "onnxruntime"
        $LIB_DIR = (Get-ChildItem -Directory -Filter onnxruntime).FullName
        chcp 65001
        echo ("LIB_DIR=" + $LIB_DIR) >> $env:GITHUB_ENV
        echo "${env.LIB_DIR}"

    - name: Configure CMake
      run: >
        cmake -B build
        -DONNXRUNTIME_ROOTDIR=${{ env.LIB_DIR }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: build
      run: | 
        ctest --build-config ${{ matrix.build_type }}
        dir
    - name: Upload to artifact
      uses: actions/upload-artifact@v3
      with:
        name: yolo8-cls_ort
        path: ${{ github.workspace }}\build\${{ matrix.build_type }}